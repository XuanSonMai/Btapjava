package quick;

import java.util.Arrays;

import merge1.main;

public class Test {
	static void quickSort(int[] a, int L, int R)
	{
		if(L>=R) 
			{
			return;
			}
		//b1 chon khoa 
		int key = a[(L+R)/2];
		//b2 phan bo lai mang theo khoa
		int k= partition(a,L,R,key);
		System.out.println("L=" + L + "R=" + R + "key= "+ key+ "k=" + k);
		System.out.println(Arrays.toString(Arrays.copyOfRange(a, L, R+1)));
		
		//b3 : chia doi mang ==> lap lai
		quickSort(a, L, k-1);
		quickSort(a,k, R);
	}
	
	

	static int partition(int[] a, int l, int r, int key) {
		
		int iL=l;
		int iR=r;
		while(iL<=iR)
		{
			while(a[iL]<key)
			{
				iL++;
			}
			while(a[iR]>key)
			{
				iR--;
			}
			// doi cho 2 phan tu ko dung vi tri
			if(iL<=iR)
			{
				int tem=a[iL];
				a[iL]=a[iR];
				a[iR]=tem;
				iL++;
				iR--;
				
			}
//			else {
//				iL++;
//				iR--;
//			
//			}
			return a[iL];
			
		}
		
		return 0;
	}
	
	public static void main(String[] args) {
		int [] a= {6,7,8,5,4,1,2,3};
		System.out.println(a.toString());
		System.out.println("Start");
		quickSort(a, 0, a.length-1);
		System.out.println(a.toString());
		System.out.println("Finished");
	}
	
	

}
